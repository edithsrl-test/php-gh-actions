name: Build

on:
  push:
    branches:
      - 'main'

env:
  PHP_VERSION: '8.1'
  NODE_VERSION: '14.x'

jobs:
  composer:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ env.PHP_VERSION }}
          extensions: dom, curl, libxml, mbstring, zip, pcntl, pdo, sqlite, pdo_sqlite
          coverage: none

      - name: Get Composer cache directory
        id: composer-cache
        run: |
          echo "::set-output name=dir::$(composer config cache-files-dir)"

      - name: Set up dependency caching for faster installs
        uses: actions/cache@v3
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-
            
      - name: Set up SSH access to private repo
        uses: webfactory/ssh-agent@v0.5.4
        with:
            ssh-private-key: ${{ secrets.METRONIC_DEPLOY_KEY }}

      - name: Install Composer dependencies
        run: |
          git config --global url."git@github.com:".insteadOf https://github.com/
          composer install --no-dev --prefer-dist --no-ansi --no-interaction --no-progress --no-scripts

      - name: Compress artifact
        run: |
          7z a vendor.7z vendor/

      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v3
        with:
          name: composer-vendor
          path: vendor.7z
          retention-days: 1

  webpack:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'yarn'

      - name: Set up SSH access to private repo
        uses: webfactory/ssh-agent@v0.5.4
        with:
            ssh-private-key: ${{ secrets.METRONIC_DEPLOY_KEY }}

      - name: Install Yarn dependencies
        run: |
          git config --global url."git@github.com:".insteadOf https://github.com/
          yarn install

      - name: Build assets
        run: |
          yarn run build

      - name: Compress artifact
        run: |
          7z a assets.7z public/build/

      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v3
        with:
          name: webpack-assets
          path: assets.7z
          retention-days: 1

  push:
    runs-on: ubuntu-latest

    environment: production

    needs:
      - composer
      - webpack

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Download artifacts
        uses: actions/download-artifact@v3

      - name: Extract artifacts
        run: |
          7z x composer-vendor/vendor.7z && rm composer-vendor/vendor.7z
          7z x webpack-assets/assets.7z && rm webpack-assets/assets.7z

      - name: Push changes
        run: |
          echo "$GITHUB_SHA" > BUILD.txt
          rm .gitignore
          mv .gitignore.release .gitignore
          git config user.name "${GITHUB_ACTOR}"
          git config user.email "${GITHUB_ACTOR}@users.noreply.github.com"
          git fetch --depth=1 origin release:release
          git reset release
          git checkout release
          git add .
          git commit -m '[skip ci] release'
          git push origin release
